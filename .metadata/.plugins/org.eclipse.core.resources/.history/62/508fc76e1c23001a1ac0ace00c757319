package com.insurancepolicy.insurancepolicy.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insurancepolicy.insurancepolicy.constants.Constants;
import com.insurancepolicy.insurancepolicy.dto.TrendingResponseDto;
import com.insurancepolicy.insurancepolicy.entity.Policy;
import com.insurancepolicy.insurancepolicy.exception.PolicyNotFoundException;
import com.insurancepolicy.insurancepolicy.repository.PolicyRepository;

@Service
public class TrendingServiceImpl implements PolicyHolderService {

	@Autowired
	PolicyRepository trendingRepository;

	@Autowired

	@Override
	public List<TrendingResponseDto> getAllTrendingPolicies() {
		
		List<Policy> policies=trendingRepository.findAll();
		List<TrendingResponseDto> trendingAllResposeList = new ArrayList<>();
		TrendingResponseDto trendingResponseDto = new TrendingResponseDto();


		List<TrendingResponseDto> trendingResponseList = trendingRepository.getAllTrendings();

		long count = trendingRepository.count();


		for (TrendingResponseDto response : trendingResponseList) {

			Optional<Policy> policy = trendingRepository.findById(response.getPolicyId());

			if (!policy.isPresent())
				throw new PolicyNotFoundException(Constants.POLICY_NOT_FOUND);

			trendingResponseDto.setPolicyId(policy.get().getPolicyId());
			trendingResponseDto.setPolicyName(policy.get().getPolicyName());
			trendingResponseDto.setCount(response.getCount());
			trendingResponseDto.setPercentage((double) (response.getCount() * count / 100));

		}

		return trendingAllResposeList;
	}

}
